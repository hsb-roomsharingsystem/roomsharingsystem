<?php

/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see docs/LICENSE */

include_once('Services/Calendar/classes/class.ilDate.php');
include_once('./Services/Calendar/interfaces/interface.ilDatePeriod.php');
include_once('Services/Calendar/classes/class.ilCalendarEntry.php');

define('IL_CAL_TRANSLATION_NONE', 0);
define('IL_CAL_TRANSLATION_SYSTEM', 1);

/**
 * Model for a calendar entry.
 *
 * @author Stefan Meyer <meyer@leifos.com>
 * @version $Id$
 *
 *
 * @ingroup ServicesCalendar
 */
class ilRoomSharingCalendarEntry extends ilCalendarEntry
{
	/**
	 * Constructor
	 *
	 * @access public
	 * @param int cal_entry id
	 *
	 */
	public function __construct($a_id = 0)
	{
		global $ilDB, $ilLog;

		$this->log = $ilLog;
		$this->db = $ilDB;

		if ($this->entry_id = $a_id)
		{
			$this->read();
		}
	}

	/**
	 * clone instance
	 */
	public function __clone()
	{
		$this->entry_id = NULL;
	}

	/**
	 * delete entry is forbidden
	 *
	 * @access public
	 * @static
	 *
	 */
	public static function _delete($a_entry_id)
	{
		return false;
	}

	/**
	 * update is forbidden
	 *
	 * @access public
	 *
	 */
	public function update()
	{
		return false;
	}

	/**
	 * save one entry is forbidden
	 *
	 * @access public
	 *
	 */
	public function save()
	{
		return false;
	}

	/**
	 * delete is forbidden
	 *
	 * @access public
	 * @return
	 */
	public function delete()
	{
		return false;
	}

	/**
	 * @access protected
	 * @param
	 *
	 */
	protected function read()
	{
		global $ilDB;

		$query = "SELECT * FROM rep_robj_xrs_bookings b LEFT JOIN rep_robj_xrs_rooms r ON r.id = b.room_id WHERE b.id = " . $this->db->quote($this->getEntryId(),
				'integer') . " ";
		$res = $this->db->query($query);
		while ($row = $res->fetchRow(DB_FETCHMODE_OBJECT))
		{
			//$this->setLastUpdate(new ilDateTime($row->last_update, IL_CAL_DATETIME, 'UTC'));
			$this->setTitle($row->subject);
			//$this->setSubtitle($row->subtitle);
			$this->setDescription($row->bookingcomment);
			$this->setLocation($row->name);
			//$this->setFurtherInformations($row->informations);
			$this->setFullday(false);
			$this->setAutoGenerated(true);
			//$this->setContextId($row->context_id);
			//$this->setTranslationType($row->translation_type);
			//$this->setCompletion($row->completion);
			//$this->setMilestone($row->is_milestone);
			$this->enableNotification(false);

			$this->start = new ilDateTime($row->date_from, IL_CAL_DATETIME);
			$this->end = new ilDateTime($row->date_to, IL_CAL_DATETIME);
		}
	}

	/**
	 * Write users responsible for a milestone is forbidden
	 */
	function writeResponsibleUsers($a_users)
	{

	}

	/**
	 * Read responsible users is forbidden
	 */
	function readResponsibleUsers()
	{

	}

}

?>
